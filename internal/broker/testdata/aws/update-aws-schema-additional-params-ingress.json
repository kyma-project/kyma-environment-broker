{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "_controlsOrder": [
    "machineType",
    "autoScalerMin",
    "autoScalerMax",
    "additionalWorkerNodePools",
    "oidc",
    "administrators",
    "ingressFiltering"
  ],
  "_load_current_config": true,
  "_show_form_view": true,
  "additionalProperties": false,
  "properties": {
    "additionalWorkerNodePools": {
      "description": "Specifies the list of additional worker node pools.",
      "type": "array",
      "uniqueItems": true,
      "items": {
        "type": "object",
        "required": ["name", "machineType", "haZones", "autoScalerMin", "autoScalerMax"],
        "_controlsOrder": ["name", "machineType", "haZones", "autoScalerMin", "autoScalerMax"],
        "additionalProperties": false,
        "properties": {
          "name": {
            "description": "Specifies the unique name of the additional worker node pool. The name must consist of lowercase alphanumeric characters or '-', must start and end with an alphanumeric character, and can be a maximum of 15 characters in length. Do not use the name “cpu-worker-0” because it's reserved for the Kyma worker node pool.",
            "type": "string",
            "minLength": 1,
            "maxLength": 15,
            "pattern": "^(?!cpu-worker-0$)[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          },
          "machineType": {
            "description": "Specifies the type of the virtual machine. The machine type marked with “*” has limited availability and generates high cost. This setting is permanent, and you cannot change it later. To use a different machine type, you must create a new worker node pool, migrate workloads to it, and decommission the old one.",
            "type": "string",
            "minLength": 1,
            "enum": [
              "m6i.large", "m6i.xlarge", "m6i.2xlarge", "m6i.4xlarge",
              "m6i.8xlarge", "m6i.12xlarge", "m6i.16xlarge", "m5.large",
              "m5.xlarge", "m5.2xlarge", "m5.4xlarge", "m5.8xlarge",
              "m5.12xlarge", "m5.16xlarge", "c7i.large", "c7i.xlarge",
              "c7i.2xlarge", "c7i.4xlarge", "c7i.8xlarge", "c7i.12xlarge",
              "c7i.16xlarge", "g6.xlarge", "g6.2xlarge", "g6.4xlarge",
              "g6.8xlarge", "g6.12xlarge", "g6.16xlarge", "g4dn.xlarge",
              "g4dn.2xlarge", "g4dn.4xlarge", "g4dn.8xlarge", "g4dn.12xlarge",
              "g4dn.16xlarge"
            ],
            "_enumDisplayName": {
              "m5.12xlarge": "m5.12xlarge (48vCPU, 192GB RAM)",
              "m5.16xlarge": "m5.16xlarge (64vCPU, 256GB RAM)",
              "m5.2xlarge": "m5.2xlarge (8vCPU, 32GB RAM)",
              "m5.4xlarge": "m5.4xlarge (16vCPU, 64GB RAM)",
              "m5.8xlarge": "m5.8xlarge (32vCPU, 128GB RAM)",
              "m5.large": "m5.large (2vCPU, 8GB RAM)",
              "m5.xlarge": "m5.xlarge (4vCPU, 16GB RAM)",
              "m6i.12xlarge": "m6i.12xlarge (48vCPU, 192GB RAM)",
              "m6i.16xlarge": "m6i.16xlarge (64vCPU, 256GB RAM)",
              "m6i.2xlarge": "m6i.2xlarge (8vCPU, 32GB RAM)",
              "m6i.4xlarge": "m6i.4xlarge (16vCPU, 64GB RAM)",
              "m6i.8xlarge": "m6i.8xlarge (32vCPU, 128GB RAM)",
              "m6i.large": "m6i.large (2vCPU, 8GB RAM)",
              "m6i.xlarge": "m6i.xlarge (4vCPU, 16GB RAM)",
              "c7i.large": "c7i.large (2vCPU, 4GB RAM)",
              "c7i.xlarge": "c7i.xlarge (4vCPU, 8GB RAM)",
              "c7i.2xlarge": "c7i.2xlarge (8vCPU, 16GB RAM)",
              "c7i.4xlarge": "c7i.4xlarge (16vCPU, 32GB RAM)",
              "c7i.8xlarge": "c7i.8xlarge (32vCPU, 64GB RAM)",
              "c7i.12xlarge": "c7i.12xlarge (48vCPU, 96GB RAM)",
              "c7i.16xlarge": "c7i.16xlarge (64vCPU, 128GB RAM)",
              "g6.xlarge": "g6.xlarge (1GPU, 4vCPU, 16GB RAM)*",
              "g6.2xlarge": "g6.2xlarge (1GPU, 8vCPU, 32GB RAM)*",
              "g6.4xlarge": "g6.4xlarge (1GPU, 16vCPU, 64GB RAM)*",
              "g6.8xlarge": "g6.8xlarge (1GPU, 32vCPU, 128GB RAM)*",
              "g6.12xlarge": "g6.12xlarge (4GPU, 48vCPU, 192GB RAM)*",
              "g6.16xlarge": "g6.16xlarge (1GPU, 64vCPU, 256GB RAM)*",
              "g4dn.xlarge": "g4dn.xlarge (1GPU, 4vCPU, 16GB RAM)*",
              "g4dn.2xlarge": "g4dn.2xlarge (1GPU, 8vCPU, 32GB RAM)*",
              "g4dn.4xlarge": "g4dn.4xlarge (1GPU, 16vCPU, 64GB RAM)*",
              "g4dn.8xlarge": "g4dn.8xlarge (1GPU, 32vCPU, 128GB RAM)*",
              "g4dn.12xlarge": "g4dn.12xlarge (4GPU, 48vCPU, 192GB RAM)*",
              "g4dn.16xlarge": "g4dn.16xlarge (1GPU, 64vCPU, 256GB RAM)*"
            }
          },
          "haZones": {
            "description": "Specifies whether high availability (HA) zones are supported. This setting is permanent and cannot be changed later. If HA is disabled, all resources are placed in a single, randomly selected zone. Disabled HA allows setting autoScalerMin to 0 and autoScalerMax to 1, which helps reduce costs. It is not recommended for production environments. When enabled, resources are distributed across three zones to enhance fault tolerance. Enabled HA requires setting autoScalerMin to the minimal value 3.",
            "title": "HA zones",
            "type": "boolean",
            "default": true
          },
          "autoScalerMin": {
            "description": "Specifies the minimum number of virtual machines to create.",
            "type": "integer",
            "minimum": 0,
            "maximum": 300,
            "default": 3
          },
          "autoScalerMax": {
            "description": "Specifies the maximum number of virtual machines to create.",
            "type": "integer",
            "minimum": 1,
            "maximum": 300,
            "default": 20
          }
        }
      }
    },
    "administrators": {
      "description": "Specifies the list of runtime administrators.",
      "items": {
        "type": "string"
      },
      "title": "Administrators",
      "type": "array"
    },
    "autoScalerMax": {
      "description": "Specifies the maximum number of virtual machines to create",
      "maximum": 300,
      "minimum": 3,
      "type": "integer"
    },
    "autoScalerMin": {
      "description": "Specifies the minimum number of virtual machines to create",
      "maximum": 300,
      "minimum": 3,
      "type": "integer"
    },
    "ingressFiltering": {
      "default": false,
      "description": "If set to true, ingress traffic from embargoed countries is blocked.",
      "title": "Enable ingress geo-blocking",
      "type": "boolean"
    },
    "machineType": {
      "_enumDisplayName": {
        "m5.large":     "m5.large (2vCPU, 8GB RAM)",
        "m5.xlarge":    "m5.xlarge (4vCPU, 16GB RAM)",
        "m5.2xlarge":   "m5.2xlarge (8vCPU, 32GB RAM)",
        "m5.4xlarge":   "m5.4xlarge (16vCPU, 64GB RAM)",
        "m5.8xlarge":   "m5.8xlarge (32vCPU, 128GB RAM)",
        "m5.12xlarge":  "m5.12xlarge (48vCPU, 192GB RAM)",
        "m5.16xlarge":  "m5.16xlarge (64vCPU, 256GB RAM)",
        "m6i.large":    "m6i.large (2vCPU, 8GB RAM)",
        "m6i.xlarge":   "m6i.xlarge (4vCPU, 16GB RAM)",
        "m6i.2xlarge":  "m6i.2xlarge (8vCPU, 32GB RAM)",
        "m6i.4xlarge":  "m6i.4xlarge (16vCPU, 64GB RAM)",
        "m6i.8xlarge":  "m6i.8xlarge (32vCPU, 128GB RAM)",
        "m6i.12xlarge": "m6i.12xlarge (48vCPU, 192GB RAM)",
        "m6i.16xlarge": "m6i.16xlarge (64vCPU, 256GB RAM)"
      },
      "description": "Specifies the type of the virtual machine.",
      "enum": [
        "m6i.large",
        "m6i.xlarge",
        "m6i.2xlarge",
        "m6i.4xlarge",
        "m6i.8xlarge",
        "m6i.12xlarge",
        "m6i.16xlarge",
        "m5.large",
        "m5.xlarge",
        "m5.2xlarge",
        "m5.4xlarge",
        "m5.8xlarge",
        "m5.12xlarge",
        "m5.16xlarge"
      ],
      "type": "string"
    },
    "oidc": {
        "description": "OIDC configuration. The list-based configuration is recommended. The object-based configuration is provided for backward compatibility.",
        "oneOf": [
            {
                "additionalProperties": false,
                "description": "OIDC configuration list",
                "properties": {
                    "list": {
                        "default": [
                            {
                                "clientID": "",
                                "encodedJwksArray": "",
                                "groupsClaim": "",
                                "groupsPrefix": "",
                                "issuerURL": "",
                                "requiredClaims": [],
                                "signingAlgs": [],
                                "usernameClaim": "",
                                "usernamePrefix": ""
                            }
                        ],
                        "description": "Specifies the list of OIDC configurations. Besides the default OIDC configuration, you can add multiple custom OIDC configurations. Leave the list empty to not use any OIDC configuration. To use the default configuration values, see the documentation. To switch the OIDC configuration from a single oidc object to an oidc list, rewrite your values.",
                        "items": {
                            "_controlsOrder": [
                                "clientID",
                                "groupsClaim",
                                "issuerURL",
                                "signingAlgs",
                                "usernameClaim",
                                "usernamePrefix",
                                "groupsPrefix",
                                "requiredClaims",
                                "encodedJwksArray"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "clientID": {
                                    "description": "The client ID for the OpenID Connect client.",
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "encodedJwksArray": {
                                    "description": "The JWKS array encoded in base64. Leave empty to not use it or to remove the previously set value.",
                                    "type": "string"
                                },
                                "groupsClaim": {
                                    "default": "",
                                    "description": "If provided, the name of a custom OpenID Connect claim for specifying user groups.",
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "groupsPrefix": {
                                    "default": "",
                                    "description": "If specified, causes claims mapping to group names to be prefixed with the current value. The 'oidc:' value results in groups like 'oidc:engineering' and 'oidc:marketing'. The value '-' (dash character without additional characters) can be used to disable all prefixing.",
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "issuerURL": {
                                    "description": "The URL of the OpenID issuer, only HTTPS scheme will be accepted.",
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "requiredClaims": {
                                    "description": "A list of key=value pairs that describes a required claim in the ID Token. If set, the claim is verified to be present in the ID Token with a matching value.",
                                    "items": {
                                        "pattern": "^[^=]+=[^=]+$",
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "signingAlgs": {
                                    "default": null,
                                    "description": "A comma-separated list of allowed JOSE asymmetric signing algorithms, for example, RS256, ES256.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "usernameClaim": {
                                    "default": "",
                                    "description": "The OpenID claim to use as the user name.",
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "usernamePrefix": {
                                    "default": "",
                                    "description": "If provided, all usernames are prefixed with this value. If not provided, username claims other than 'email' are prefixed by the issuer URL to avoid clashes. To skip any prefixing, provide the value '-' (dash character without additional characters).",
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "clientID",
                                "issuerURL",
                                "groupsClaim",
                                "usernameClaim",
                                "usernamePrefix",
                                "signingAlgs",
                                "groupsPrefix"
                            ],
                            "type": "object"
                        },
                        "type": "array",
                        "uniqueItems": true
                    }
                },
                "title": "List",
                "type": "object"
            },
            {
                "_controlsOrder": [
                    "clientID",
                    "groupsClaim",
                    "issuerURL",
                    "signingAlgs",
                    "usernameClaim",
                    "usernamePrefix",
                    "groupsPrefix",
                    "requiredClaims",
                    "encodedJwksArray"
                ],
                "additionalProperties": false,
                "description": "Legacy OIDC configuration",
                "properties": {
                    "clientID": {
                        "description": "The client ID for the OpenID Connect client.",
                        "readOnly": false,
                        "type": "string"
                    },
                    "encodedJwksArray": {
                        "description": "The JWKS array encoded in base64. To remove the previously set value, enter the value '-' (dash character without additional characters).",
                        "readOnly": false,
                        "type": "string"
                    },
                    "groupsClaim": {
                        "description": "If provided, the name of a custom OpenID Connect claim for specifying user groups.",
                        "readOnly": false,
                        "type": "string"
                    },
                    "groupsPrefix": {
                        "description": "If specified, causes claims mapping to group names to be prefixed with the current value. The 'oidc:' value results in groups like 'oidc:engineering' and 'oidc:marketing'. The value '-' (dash character without additional characters) can be used to disable all prefixing.",
                        "readOnly": false,
                        "type": "string"
                    },
                    "issuerURL": {
                        "description": "The URL of the OpenID issuer, only HTTPS scheme will be accepted.",
                        "readOnly": false,
                        "type": "string"
                    },
                    "requiredClaims": {
                        "description": "A list of key=value pairs that describes a required claim in the ID Token. If set, the claim is verified to be present in the ID Token with a matching value. To remove the previously set claims, use the value '-' (dash character without additional characters).",
                        "items": {
                            "pattern": "^([^=]+=[^=]+|-)$",
                            "type": "string"
                        },
                        "readOnly": false,
                        "type": "array"
                    },
                    "signingAlgs": {
                        "description": "A comma-separated list of allowed JOSE asymmetric signing algorithms, for example, RS256, ES256.",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": false,
                        "type": "array"
                    },
                    "usernameClaim": {
                        "description": "The OpenID claim to use as the user name.",
                        "readOnly": false,
                        "type": "string"
                    },
                    "usernamePrefix": {
                        "description": "If provided, all usernames are prefixed with this value. If not provided, username claims other than 'email' are prefixed by the issuer URL to avoid clashes. To skip any prefixing, provide the value '-' (dash character without additional characters).",
                        "readOnly": false,
                        "type": "string"
                    }
                },
                "required": [
                    "clientID",
                    "issuerURL"
                ],
                "title": "Object (not recommended)",
                "type": "object"
            }
        ],
        "type": "object"
    }
  },
  "type": "object"
}