apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kyma-env-broker.fullname" . }}
  labels:
{{ include "kyma-env-broker.labels" . | indent 4 }}
  {{ if .Values.testConfig.kebDeployment.useAnnotations }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": {{ .Values.testConfig.kebDeployment.weight | quote }}
  {{- end }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "kyma-env-broker.name" . }}
      app.kubernetes.io/instance: {{ .Values.namePrefix }}
  strategy:
    {{- toYaml .Values.deployment.strategy | nindent 4 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "kyma-env-broker.name" . }}
        app.kubernetes.io/instance: {{ .Values.namePrefix }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/app-config.yaml") . | sha256sum }}
    spec:
      {{- if ne .Values.imagePullSecret "" }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecret }}
      {{- end }}
      serviceAccountName: {{ .Values.global.kyma_environment_broker.serviceAccountName }}
    {{- with .Values.deployment.securityContext }}
      securityContext:
        {{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      nodeSelector:
        {{- toYaml .Values.deployment.nodeSelector | nindent 8 }}
      containers:
        {{- if .Values.profiler.memory }}
        - name: profiler
          command:
          - bash
          - -c
          - chmod 777 /tmp/profiler && sleep inf
          securityContext:
            runAsUser: 0
          image: ubuntu:20.04
          imagePullPolicy: Always
          volumeMounts:
            - name: keb-memory-profile
              mountPath: /tmp/profiler
              readOnly: false
        {{- end }}
        {{- if .Values.broker.monitorAdditionalProperties }}
        - name: additional-properties
          command:
          - sh
          - -c
          - "chmod 777 /additional-properties && sleep infinity"
          securityContext:
            runAsUser: 0
          image: europe-docker.pkg.dev/kyma-project/prod/alpine:v20250430-cb54844f
          imagePullPolicy: Always
          volumeMounts:
            - name: keb-additional-properties
              mountPath: /additional-properties
              readOnly: false
        {{- end }}
        - name: {{ include "kyma-env-broker.name" . }}
          image: "{{ .Values.global.images.container_registry.path }}/{{ .Values.global.images.kyma_environment_broker.dir }}kyma-environment-broker:{{ .Values.global.images.kyma_environment_broker.version }}"
          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
          env:
            - name: APP_ARCHIVING_DRY_RUN
              value: "{{ .Values.archiving.dryRun }}"
            - name: APP_ARCHIVING_ENABLED
              value: "{{ .Values.archiving.enabled }}"
            - name: APP_BROKER_ALLOW_UPDATE_EXPIRED_INSTANCE_WITH_CONTEXT
              value: "{{ .Values.broker.allowUpdateExpiredInstanceWithContext }}"
            - name: APP_BROKER_BINDING_BINDABLE_PLANS
              value: "{{ .Values.broker.binding.bindablePlans}}"
            - name: APP_BROKER_BINDING_CREATE_BINDING_TIMEOUT
              value: "{{ .Values.broker.binding.createBindingTimeout}}"
            - name: APP_BROKER_BINDING_ENABLED
              value: "{{ .Values.broker.binding.enabled}}"
            - name: APP_BROKER_BINDING_EXPIRATION_SECONDS
              value: "{{ .Values.broker.binding.expirationSeconds}}"
            - name: APP_BROKER_BINDING_MAX_BINDINGS_COUNT
              value: "{{ .Values.broker.binding.maxBindingsCount}}"
            - name: APP_BROKER_BINDING_MAX_EXPIRATION_SECONDS
              value: "{{ .Values.broker.binding.maxExpirationSeconds}}"
            - name: APP_BROKER_BINDING_MIN_EXPIRATION_SECONDS
              value: "{{ .Values.broker.binding.minExpirationSeconds}}"
            - name: APP_BROKER_CHECK_QUOTA_LIMIT
              value: "{{ .Values.broker.checkQuotaLimit }}"
            - name: APP_BROKER_DEFAULT_REQUEST_REGION
              value: "{{ .Values.broker.defaultRequestRegion }}"
            - name: APP_BROKER_DISABLE_SAP_CONVERGED_CLOUD
              value: "{{ .Values.broker.disableSapConvergedCloud }}"
            - name: APP_BROKER_ENABLE_JWKS
              value: "{{ .Values.broker.enableJwks }}"
            - name: APP_BROKER_ENABLE_PLANS
              value: "{{ .Values.broker.enablePlans }}"
            - name: APP_BROKER_ENABLE_PLAN_UPGRADES
              value: "{{ .Values.broker.enablePlanUpgrades }}"
            - name: APP_BROKER_ENABLE_SHOOT_AND_SEED_SAME_REGION
              value: "{{ .Values.broker.enableShootAndSeedSameRegion }}"
            - name: APP_BROKER_FREE_DOCS_URL
              value: "{{ .Values.broker.freeDocsURL }}"
            - name: APP_BROKER_FREE_EXPIRATION_PERIOD
              value: "{{ .Values.broker.freeExpirationPeriod }}"
            - name: APP_BROKER_GARDENER_SEEDS_CACHE_CONFIG_MAP_NAME
              value: "gardener-seeds-cache"
            - name: APP_BROKER_INCLUDE_ADDITIONAL_PARAMS_IN_SCHEMA
              value: "{{ .Values.broker.includeAdditionalParamsInSchema }}"
            - name: APP_BROKER_MONITOR_ADDITIONAL_PROPERTIES
              value: "{{ .Values.broker.monitorAdditionalProperties }}"
            - name: APP_BROKER_ONLY_ONE_FREE_PER_GA
              value: "{{ .Values.broker.onlyOneFreePerGA }}"
            - name: APP_BROKER_ONLY_SINGLE_TRIAL_PER_GA
              value: "{{ .Values.broker.onlySingleTrialPerGA }}"
            - name: APP_BROKER_OPERATION_TIMEOUT
              value: "{{ .Values.broker.operationTimeout }}"
            - name: APP_BROKER_PORT
              value: "{{ .Values.broker.port }}"
            - name: APP_BROKER_REJECT_UNSUPPORTED_PARAMETERS
              value: "{{ .Values.broker.rejectUnsupportedParameters }}"
            - name: APP_BROKER_SHOW_FREE_EXPIRATION_INFO
              value: "{{ .Values.broker.showFreeExpirationInfo }}"
            - name: APP_BROKER_SHOW_TRIAL_EXPIRATION_INFO
              value: "{{ .Values.broker.showTrialExpirationInfo }}"
            - name: APP_BROKER_STATUS_PORT
              value: "{{ .Values.broker.statusPort }}"
            - name: APP_BROKER_SUBACCOUNT_MOVEMENT_ENABLED
              value: "{{ .Values.broker.subaccountMovementEnabled }}"
            - name: APP_BROKER_SUBACCOUNTS_IDS_TO_SHOW_TRIAL_EXPIRATION_INFO
              value: "{{ .Values.broker.subaccountsIdsToShowTrialExpirationInfo }}"
            - name: APP_BROKER_TRIAL_DOCS_URL
              value: "{{ .Values.broker.trialDocsURL }}"
            - name: APP_BROKER_UPDATE_CUSTOM_RESOURCES_LABELS_ON_ACCOUNT_MOVE
              value: "{{ .Values.broker.updateCustomResourcesLabelsOnAccountMove }}"
            - name: APP_BROKER_URL
              value: {{ .Values.host }}.{{ .Values.global.ingress.domainName }}
            - name: APP_BROKER_USE_ADDITIONAL_OIDC_SCHEMA
              value: "{{ .Values.broker.useAdditionalOIDCSchema }}"
            - name: APP_CATALOG_FILE_PATH
              value: /config/catalog.yaml
            - name: APP_CLEANING_DRY_RUN
              value: "{{ .Values.cleaning.dryRun }}"
            - name: APP_CLEANING_ENABLED
              value: "{{ .Values.cleaning.enabled }}"
            - name: APP_DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: kcp-postgresql
                  key: postgresql-serviceName
            - name: APP_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: kcp-postgresql
                  key: postgresql-broker-db-name
            - name: APP_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: kcp-postgresql
                  key: postgresql-broker-password
            - name: APP_DATABASE_PORT
              valueFrom:
                secretKeyRef:
                  name: kcp-postgresql
                  key: postgresql-servicePort
            - name: APP_DATABASE_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.global.database.managedGCP.encryptionSecretName }}"
                  key: secretKey
                  optional: true
            - name: APP_DATABASE_SSLMODE
              valueFrom:
                secretKeyRef:
                  name: kcp-postgresql
                  key: postgresql-sslMode
            - name: APP_DATABASE_SSLROOTCERT
              value: /secrets/cloudsql-sslrootcert/server-ca.pem
            - name: APP_DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: kcp-postgresql
                  key: postgresql-broker-username
            - name: APP_DEPROVISIONING_MAX_STEP_PROCESSING_TIME
              value: "{{ .Values.deprovisioning.maxStepProcessingTime }}"
            - name: APP_DEPROVISIONING_WORKERS_AMOUNT
              value: "{{ .Values.deprovisioning.workersAmount }}"
            - name: APP_DISABLE_PROCESS_OPERATIONS_IN_PROGRESS
              value: "{{ .Values.disableProcessOperationsInProgress }}"
            - name: APP_DOMAIN_NAME
              value: "{{ .Values.global.ingress.domainName }}"
            - name: APP_EDP_ADMIN_URL
              value: "{{ .Values.edp.adminURL }}"
            - name: APP_EDP_AUTH_URL
              value: "{{ .Values.edp.authURL }}"
            - name: APP_EDP_DISABLED
              value: "{{ .Values.edp.disabled }}"
            - name: APP_EDP_ENVIRONMENT
              value: "{{ .Values.edp.environment }}"
            - name: APP_EDP_NAMESPACE
              value: "{{ .Values.edp.namespace }}"
            - name: APP_EDP_REQUIRED
              value: "{{ .Values.edp.required }}"
            - name: APP_EDP_SECRET
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.edp.secretName }}"
                  key: secret
            - name: APP_EVENTS_ENABLED
              value: "{{ .Values.events.enabled }}"
            - name: APP_FREEMIUM_WHITELISTED_GLOBAL_ACCOUNTS_FILE_PATH
              value: /config/freemiumWhitelistedGlobalAccountIds.yaml
            - name: APP_GARDENER_KUBECONFIG_PATH
              value: {{ .Values.gardener.kubeconfigPath }}
            - name: APP_GARDENER_PROJECT
              value: {{ .Values.gardener.project }}
            - name: APP_GARDENER_SHOOT_DOMAIN
              value: "{{ .Values.gardener.shootDomain }}"
            - name: APP_HAP_RULE_FILE_PATH
              value: /config/hapRule.yaml
            - name: APP_INFRASTRUCTURE_MANAGER_CONTROL_PLANE_FAILURE_TOLERANCE
              value: "{{ .Values.infrastructureManager.controlPlaneFailureTolerance }}"
            - name: APP_INFRASTRUCTURE_MANAGER_DEFAULT_GARDENER_SHOOT_PURPOSE
              value: "{{ .Values.infrastructureManager.defaultShootPurpose }}"
            - name: APP_INFRASTRUCTURE_MANAGER_DEFAULT_TRIAL_PROVIDER
              value: "{{ .Values.infrastructureManager.defaultTrialProvider }}"
            - name: APP_INFRASTRUCTURE_MANAGER_INGRESS_FILTERING_PLANS
              value: "{{ .Values.infrastructureManager.ingressFilteringPlans }}"
            - name: APP_INFRASTRUCTURE_MANAGER_KUBERNETES_VERSION
              value: "{{ .Values.infrastructureManager.kubernetesVersion }}"
            - name: APP_INFRASTRUCTURE_MANAGER_MACHINE_IMAGE
              value: {{ .Values.infrastructureManager.machineImage }}
            - name: APP_INFRASTRUCTURE_MANAGER_MACHINE_IMAGE_VERSION
              value: {{ .Values.infrastructureManager.machineImageVersion }}
            - name: APP_INFRASTRUCTURE_MANAGER_MULTI_ZONE_CLUSTER
              value: "{{ .Values.infrastructureManager.multiZoneCluster }}"
            - name: APP_INFRASTRUCTURE_MANAGER_USE_SMALLER_MACHINE_TYPES
              value: "{{ .Values.infrastructureManager.useSmallerMachineTypes }}"
            - name: APP_KUBECONFIG_ALLOW_ORIGINS
              value: "{{ .Values.kubeconfig.allowOrigins }}"
            - name: APP_KYMA_DASHBOARD_CONFIG_LANDSCAPE_URL
              value: "{{ .Values.kymaDashboardConfig.landscapeURL }}"
            - name: APP_LIFECYCLE_MANAGER_INTEGRATION_DISABLED
              value: "{{ .Values.lifecycleManager.disabled}}"
            - name: APP_METRICSV2_ENABLED
              value: "{{ .Values.metricsv2.enabled }}"
            - name: APP_METRICSV2_OPERATION_RESULT_FINISHED_OPERATION_RETENTION_PERIOD
              value: "{{ .Values.metricsv2.operationResultFinishedOperationRetentionPeriod }}"
            - name: APP_METRICSV2_OPERATION_RESULT_POLLING_INTERVAL
              value: "{{ .Values.metricsv2.operationResultPollingInterval }}"
            - name: APP_METRICSV2_OPERATION_RESULT_RETENTION_PERIOD
              value: "{{ .Values.metricsv2.operationResultRetentionPeriod }}"
            - name: APP_METRICSV2_OPERATION_STATS_POLLING_INTERVAL
              value: "{{ .Values.metricsv2.operationStatsPollingInterval }}"
            - name: APP_MULTIPLE_CONTEXTS
              value: "{{ .Values.multipleContexts }}"
            - name: APP_PLANS_CONFIGURATION_FILE_PATH
              value: /config/plansConfig.yaml
            - name: APP_PROFILER_MEMORY
              value: "{{ .Values.profiler.memory }}"
            - name: APP_PROVIDERS_CONFIGURATION_FILE_PATH
              value: /config/providersConfig.yaml
            - name: APP_PROVISIONING_MAX_STEP_PROCESSING_TIME
              value: "{{ .Values.provisioning.maxStepProcessingTime }}"
            - name: APP_PROVISIONING_WORKERS_AMOUNT
              value: "{{ .Values.provisioning.workersAmount }}"
            - name: APP_QUOTA_AUTH_URL
              value: "{{ .Values.cis.v2.authURL }}"
            - name: APP_QUOTA_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.cis.v2.secretName }}"
                  key: id
            - name: APP_QUOTA_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.cis.v2.secretName }}"
                  key: secret
            - name: APP_QUOTA_SERVICE_URL
              value: "{{ .Values.cis.v2.provisioningServiceURL }}"
            - name: APP_REGIONS_SUPPORTING_MACHINE_FILE_PATH
              value: /config/regionsSupportingMachine.yaml
            - name: APP_RUNTIME_CONFIGURATION_CONFIG_MAP_NAME
              value: "{{ include "kyma-env-broker.fullname" . }}-runtime-configuration"
            - name: APP_SKR_DNS_PROVIDERS_VALUES_YAML_FILE_PATH
              value: /config/skrDNSProvidersValues.yaml
            - name: APP_SKR_OIDC_DEFAULT_VALUES_YAML_FILE_PATH
              value: /config/skrOIDCDefaultValues.yaml
            - name: APP_STEP_TIMEOUTS_CHECK_RUNTIME_RESOURCE_CREATE
              value: "{{ .Values.stepTimeouts.checkRuntimeResourceCreate }}"
            - name: APP_STEP_TIMEOUTS_CHECK_RUNTIME_RESOURCE_DELETION
              value: "{{ .Values.stepTimeouts.checkRuntimeResourceDeletion }}"
            - name: APP_STEP_TIMEOUTS_CHECK_RUNTIME_RESOURCE_UPDATE
              value: "{{ .Values.stepTimeouts.checkRuntimeResourceUpdate }}"
            - name: APP_TRIAL_REGION_MAPPING_FILE_PATH
              value: /config/trialRegionMapping.yaml
            - name: APP_UPDATE_MAX_STEP_PROCESSING_TIME
              value: "{{ .Values.update.maxStepProcessingTime }}"
            - name: APP_UPDATE_PROCESSING_ENABLED
              value: "{{ .Values.osbUpdateProcessingEnabled }}"
            - name: APP_UPDATE_WORKERS_AMOUNT
              value: "{{ .Values.update.workersAmount }}"
          ports:
            - name: http
              containerPort: {{ .Values.broker.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.broker.statusPort }}
            periodSeconds: 10
            timeoutSeconds: 3
            initialDelaySeconds: 30
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.broker.statusPort }}
            periodSeconds: 5
            timeoutSeconds: 2
            initialDelaySeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /gardener/kubeconfig
              name: gardener-kubeconfig
              readOnly: true
            - mountPath: /config
              name: config-volume
            - mountPath: /swagger/schema
              name: swagger-volume
          {{- if .Values.profiler.memory }}
            - name: keb-memory-profile
              mountPath: /tmp/profiler
              readOnly: false
          {{- end }}
          {{- if .Values.broker.monitorAdditionalProperties }}
            - name: keb-additional-properties
              mountPath: /additional-properties
              readOnly: false
          {{- end }}
          {{- if and (eq .Values.global.database.embedded.enabled false) (eq .Values.global.database.cloudsqlproxy.enabled false)}}
            - name: cloudsql-sslrootcert
              mountPath: /secrets/cloudsql-sslrootcert
              readOnly: true
          {{- end }}
        {{- if and (eq .Values.global.database.embedded.enabled false) (eq .Values.global.database.cloudsqlproxy.enabled true)}}
        - name: cloudsql-proxy
          image: {{ .Values.global.images.cloudsql_proxy.repository }}:{{ .Values.global.images.cloudsql_proxy.tag }}
          {{- if .Values.global.database.cloudsqlproxy.workloadIdentity.enabled }}
          command: ["/cloud-sql-proxy",
                    "{{ .Values.global.database.managedGCP.instanceConnectionName }}",
                    "--exit-zero-on-sigterm",
                    "--private-ip"]
          {{- else }}
          command: ["/cloud-sql-proxy",
                    "{{ .Values.global.database.managedGCP.instanceConnectionName }}",
                    "--private-ip",
                    "--exit-zero-on-sigterm",
                    "--credentials-file=/secrets/cloudsql-instance-credentials/credentials.json"]
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql-instance-credentials
              readOnly: true
          {{- end }}
          {{- with .Values.deployment.securityContext }}
          securityContext:
{{ toYaml . | indent 12 }}
          {{- end }}
        {{- end}}
      volumes:
      - name: config-volume
        configMap:
          name: {{ include "kyma-env-broker.fullname" . }}
      - name: swagger-volume
        configMap:
          name: {{ include "kyma-env-broker.fullname" . }}-swagger
      {{- if and (eq .Values.global.database.embedded.enabled false) (eq .Values.global.database.cloudsqlproxy.enabled true) (eq .Values.global.database.cloudsqlproxy.workloadIdentity.enabled false)}}
      - name: cloudsql-instance-credentials
        secret:
          secretName: cloudsql-instance-credentials
      {{- end}}
      {{- if and (eq .Values.global.database.embedded.enabled false) (eq .Values.global.database.cloudsqlproxy.enabled false)}}
      - name: cloudsql-sslrootcert
        secret:
          secretName: kcp-postgresql
          items:
          - key: postgresql-sslRootCert
            path: server-ca.pem
          optional: true
      {{- end}}
      - name: gardener-kubeconfig
        secret:
          secretName: {{ .Values.gardener.secretName }}
      {{- if .Values.profiler.memory }}
      - name: keb-memory-profile
        persistentVolumeClaim:
          claimName: {{ include "kyma-env-broker.fullname" . }}-profiler
      {{- end }}
      {{- if .Values.broker.monitorAdditionalProperties }}
      - name: keb-additional-properties
        persistentVolumeClaim:
          claimName: {{ include "kyma-env-broker.fullname" . }}-additional-properties
      {{- end }}
