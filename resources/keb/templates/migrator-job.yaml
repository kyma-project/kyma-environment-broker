{{- if .Values.migratorJobs.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: kcp-migration-broker
  labels:
    app: {{ .Values.namePrefix }}
    release: {{ .Values.namePrefix }}
  {{- if or .Values.migratorJobs.helmhook.enabled .Values.migratorJobs.argosync.enabled }}
  annotations:
    {{- if .Values.migratorJobs.helmhook.enabled }}
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": {{ .Values.migratorJobs.helmhook.weight | quote }}
    "helm.sh/hook-delete-policy": before-hook-creation
    {{- end }}
    {{- if .Values.migratorJobs.argosync.enabled }}
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/sync-wave: {{ .Values.migratorJobs.argosync.syncwave | quote }}
    {{- end }}
  {{- end }}
spec:
  template:
    metadata:
      labels:
        app: {{ .Values.namePrefix }}
        release: {{ .Values.namePrefix }}
      {{- if eq .Values.global.database.embedded.enabled false }}
      annotations:
        sidecar.istio.io/inject: "false"
      {{- end }}
    spec:
      serviceAccountName: {{ .Values.global.kyma_environment_broker.serviceAccountName }}
      restartPolicy: Never
      shareProcessNamespace: true
      {{- if ne .Values.imagePullSecret "" }}
      imagePullSecrets:
          - name: {{ .Values.imagePullSecret }}
      {{- end }}
      containers:
        {{- if and (eq .Values.global.database.embedded.enabled false) (eq .Values.global.database.cloudsqlproxy.enabled true)}}
        - name: cloudsql-proxy
          image: {{ .Values.global.images.cloudsql_proxy.repository }}:{{ .Values.global.images.cloudsql_proxy.tag }}
          {{- if .Values.global.database.cloudsqlproxy.workloadIdentity.enabled }}
          command: ["/cloud-sql-proxy",
          "{{ .Values.global.database.managedGCP.instanceConnectionName }}",
          "--exit-zero-on-sigterm",
          "--private-ip"]
          {{- else }}
          command:
            - "/cloud-sql-proxy"
            - "{{ .Values.global.database.managedGCP.instanceConnectionName }}"
            - "--private-ip"
            - "--exit-zero-on-sigterm"
            - "--credentials-file=/secrets/cloudsql-instance-credentials/credentials.json"
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql-instance-credentials
              readOnly: true
          {{- end }}
        {{- end}}
        - name: migrator
          image: "{{ .Values.global.images.container_registry.path }}/{{ .Values.global.images.kyma_environment_broker_schema_migrator.dir }}kyma-environment-broker-schema-migrator:{{ .Values.global.images.kyma_environment_broker_schema_migrator.version }}"
          imagePullPolicy: IfNotPresent
          command:
            - /bin/schema-migrator
          env:
            - name: DATABASE_EMBEDDED
              value: "{{ .Values.global.database.embedded.enabled }}"
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: kcp-postgresql
                  key: postgresql-serviceName
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: kcp-postgresql
                  key: postgresql-broker-db-name
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: kcp-postgresql
                  key: postgresql-broker-password
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: kcp-postgresql
                  key: postgresql-servicePort     
            - name: DB_SSL
              valueFrom:
                secretKeyRef:
                  name: kcp-postgresql
                  key: postgresql-sslMode
            - name: DB_SSLROOTCERT
              value: /secrets/cloudsql-sslrootcert/server-ca.pem
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: kcp-postgresql
                  key: postgresql-broker-username
            - name: DIRECTION
              value: "up"
          volumeMounts:
            - name: kyma-environment-broker
              mountPath: /migrate/new-migrations
            {{- if and (eq .Values.global.database.embedded.enabled false) (eq .Values.global.database.cloudsqlproxy.enabled false) }}
            - name: cloudsql-sslrootcert
              mountPath: /secrets/cloudsql-sslrootcert
              readOnly: true
            {{- end }}
      volumes:
        - name: kyma-environment-broker
          configMap:
            name: kyma-environment-broker-migrations
        {{- if and (eq .Values.global.database.embedded.enabled false) (eq .Values.global.database.cloudsqlproxy.enabled true) (eq .Values.global.database.cloudsqlproxy.workloadIdentity.enabled false)}}
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
        {{- end }}
        {{- if and (eq .Values.global.database.embedded.enabled false) (eq .Values.global.database.cloudsqlproxy.enabled false) }}
        - name: cloudsql-sslrootcert
          secret:
            secretName: kcp-postgresql
            items:
              - key: postgresql-sslRootCert
                path: server-ca.pem
            optional: true
          {{- end}}
{{ end }}
